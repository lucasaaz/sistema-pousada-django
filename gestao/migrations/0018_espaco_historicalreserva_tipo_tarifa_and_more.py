# Generated by Django 5.2.6 on 2025-10-27 22:48

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gestao', '0017_historicalacomodacao_historicalarquivoreserva_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Espaco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('espaco', 'Espaço Físico'), ('item_servico', 'Item ou Serviço')], default='espaco', max_length=20, verbose_name='Tipo')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Espaço/Item')),
                ('descricao', models.TextField(blank=True, null=True)),
                ('capacidade', models.PositiveIntegerField(blank=True, help_text="Para 'Espaços Físicos', informe a capacidade máxima de pessoas.", null=True, verbose_name='Capacidade')),
                ('valor_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Base (R$)')),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Espaço ou Item Alugável',
                'verbose_name_plural': 'Espaços e Itens Alugáveis',
            },
        ),
        migrations.AddField(
            model_name='historicalreserva',
            name='tipo_tarifa',
            field=models.CharField(choices=[('diaria', 'Diária'), ('pacote', 'Pacote')], default='diaria', max_length=20),
        ),
        migrations.AddField(
            model_name='reserva',
            name='tipo_tarifa',
            field=models.CharField(choices=[('diaria', 'Diária'), ('pacote', 'Pacote')], default='diaria', max_length=20),
        ),
        migrations.AlterField(
            model_name='pagamento',
            name='reserva',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagamentos', to='gestao.reserva'),
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_evento', models.CharField(max_length=150, verbose_name='Nome do Evento')),
                ('data_inicio', models.DateTimeField(verbose_name='Início do Evento')),
                ('data_fim', models.DateTimeField(verbose_name='Fim do Evento')),
                ('numero_convidados', models.PositiveIntegerField(default=1, verbose_name='Nº de Convidados')),
                ('valor_negociado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Total do Evento (R$)')),
                ('status', models.CharField(choices=[('orcamento', 'Orçamento'), ('confirmado', 'Confirmado'), ('realizado', 'Realizado'), ('cancelado', 'Cancelado')], default='orcamento', max_length=20)),
                ('data_registro', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações Adicionais')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='eventos', to='gestao.cliente')),
                ('espacos', models.ManyToManyField(related_name='eventos', to='gestao.espaco', verbose_name='Espaços Selecionados')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='CustoEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_custo', models.DateField(verbose_name='Data de Custo')),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custos', to='gestao.evento')),
            ],
        ),
        migrations.AddField(
            model_name='gasto',
            name='evento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gastos', to='gestao.evento'),
        ),
        migrations.AddField(
            model_name='historicalgasto',
            name='evento',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.evento'),
        ),
        migrations.AddField(
            model_name='historicalpagamento',
            name='evento',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.evento'),
        ),
        migrations.AddField(
            model_name='pagamento',
            name='evento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagamentos', to='gestao.evento'),
        ),
        migrations.CreateModel(
            name='GrupoReserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_grupo', models.CharField(help_text='Ex: Excursão Família Silva', max_length=150, verbose_name='Nome do Grupo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('cliente_responsavel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos_liderados', to='gestao.cliente')),
            ],
            options={
                'verbose_name': 'Grupo de Reserva',
                'verbose_name_plural': 'Grupos de Reserva',
            },
        ),
        migrations.AddField(
            model_name='historicalreserva',
            name='grupo',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.gruporeserva'),
        ),
        migrations.AddField(
            model_name='reserva',
            name='grupo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservas', to='gestao.gruporeserva'),
        ),
        migrations.CreateModel(
            name='HistoricalConfiguracaoHotel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do Hotel/Pousada', max_length=100)),
                ('endereco', models.CharField(max_length=255)),
                ('logo', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical configuracao hotel',
                'verbose_name_plural': 'historical configuracao hotels',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustoEvento',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_custo', models.DateField(verbose_name='Data de Custo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('evento', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.evento')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical custo evento',
                'verbose_name_plural': 'historical custo eventos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEspaco',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('espaco', 'Espaço Físico'), ('item_servico', 'Item ou Serviço')], default='espaco', max_length=20, verbose_name='Tipo')),
                ('nome', models.CharField(db_index=True, max_length=100, verbose_name='Nome do Espaço/Item')),
                ('descricao', models.TextField(blank=True, null=True)),
                ('capacidade', models.PositiveIntegerField(blank=True, help_text="Para 'Espaços Físicos', informe a capacidade máxima de pessoas.", null=True, verbose_name='Capacidade')),
                ('valor_base', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Base (R$)')),
                ('ativo', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Espaço ou Item Alugável',
                'verbose_name_plural': 'historical Espaços e Itens Alugáveis',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEvento',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome_evento', models.CharField(max_length=150, verbose_name='Nome do Evento')),
                ('data_inicio', models.DateTimeField(verbose_name='Início do Evento')),
                ('data_fim', models.DateTimeField(verbose_name='Fim do Evento')),
                ('numero_convidados', models.PositiveIntegerField(default=1, verbose_name='Nº de Convidados')),
                ('valor_negociado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Total do Evento (R$)')),
                ('status', models.CharField(choices=[('orcamento', 'Orçamento'), ('confirmado', 'Confirmado'), ('realizado', 'Realizado'), ('cancelado', 'Cancelado')], default='orcamento', max_length=20)),
                ('data_registro', models.DateTimeField(blank=True, editable=False)),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações Adicionais')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.cliente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Evento',
                'verbose_name_plural': 'historical Eventos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGrupoReserva',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome_grupo', models.CharField(help_text='Ex: Excursão Família Silva', max_length=150, verbose_name='Nome do Grupo')),
                ('data_criacao', models.DateTimeField(blank=True, editable=False)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente_responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.cliente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Grupo de Reserva',
                'verbose_name_plural': 'historical Grupos de Reserva',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPeriodoTarifario',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(help_text='Ex: Réveillon 2025, Feriado de Tiradentes', max_length=100, verbose_name='Nome do Período')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('percentual_ajuste', models.DecimalField(decimal_places=2, help_text='Use valores positivos para acréscimos (ex: 20.00 para +20%) e negativos para descontos (ex: -10.00 para -10%).', max_digits=5, verbose_name='Ajuste Percentual (%)')),
                ('ativo', models.BooleanField(default=True, help_text='Desmarque para desativar esta regra temporariamente.', verbose_name='Ativo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Período Tarifário',
                'verbose_name_plural': 'historical Períodos Tarifários',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='PeriodoTarifario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Ex: Réveillon 2025, Feriado de Tiradentes', max_length=100, verbose_name='Nome do Período')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('percentual_ajuste', models.DecimalField(decimal_places=2, help_text='Use valores positivos para acréscimos (ex: 20.00 para +20%) e negativos para descontos (ex: -10.00 para -10%).', max_digits=5, verbose_name='Ajuste Percentual (%)')),
                ('ativo', models.BooleanField(default=True, help_text='Desmarque para desativar esta regra temporariamente.', verbose_name='Ativo')),
                ('acomodacoes', models.ManyToManyField(blank=True, to='gestao.acomodacao')),
                ('clientes', models.ManyToManyField(blank=True, to='gestao.cliente')),
            ],
            options={
                'verbose_name': 'Período Tarifário',
                'verbose_name_plural': 'Períodos Tarifários',
                'ordering': ['data_inicio'],
            },
        ),
    ]
